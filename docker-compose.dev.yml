---
version: '3.8'

services:
  db:
    ports:
      - "3306:3306"

  app:
    build: 
      context: ./backend
      target: builder # Dockerfileのビルド領域だけ使用
    ports:
      - "8080:8080"
    volumes:
      # ディレクトリ全体ではなく、コンパイルが必要なソースコードのみをマウントする
      - ./backend/src:/app/src
      - ~/.m2:/root/.m2 # Mavenの高速化
      - ./backend/wait-for-it.sh:/wait-for-it.sh # builder領域にwait-for-itがないためマウント
      - ./backend/pom.xml:/app/pom.xml
    # DockerfileのCMDを上書きし、DevToolsが変更を検知できるようにする
    # command: ["/wait-for-it.sh", "db", "3306", "--", "mvn", "spring-boot:run",]
    command: > #デバッグ用にコマンド形式を変更
      sh -c "
      sed -i 's/\r$//' /wait-for-it.sh &&
      chmod +x /wait-for-it.sh &&
      /wait-for-it.sh db 3306 -- mvn spring-boot:run
      " 

  frontend:
    image: node:18-alpine
    working_dir: /app
    ports:
      - "3000:3000"
    volumes:
      - ./front:/app
      - /app/node.modules # ホストPCのnode.modulesファイルで上書しないように
      
      # corepackを有効にしてからyarnコマンドを実行
    command: sh -c "corepack enable && yarn install && yarn dev --host"
    # --host: コンテナは別環境になるため明示的に外部(ホストPC)からの接続を許可するためのもの