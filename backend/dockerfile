# --- ステージ1: ビルド環境 ---
# MavenとJavaが使える公式イメージを「ビルダー」として使う
FROM maven:3.8.4-openjdk-17 AS builder

# 作業ディレクトリを作成
WORKDIR /app

# まずpom.xmlをコピーして、依存関係だけ先にダウンロードする（キャッシュを効かせるため）
COPY pom.xml .
RUN mvn dependency:go-offline

# すべてのソースコードをコピーする
COPY src ./src

# Mavenを使ってアプリケーションをビルドし、jarファイルを作成する
RUN mvn package -DskipTests


# --- ステージ2: 実行環境 ---
# 実行に必要なJavaだけが入った軽量なイメージを使う
FROM openjdk:17-jdk-slim

# 作業ディレクトリを作成
WORKDIR /app

# wait-for-it.shの依存ツールをインストール
RUN apt-get update && apt-get install -y dos2unix netcat

COPY --from=builder /app/target/*.jar app.jar
COPY wait-for-it.sh /wait-for-it.sh 

# 改行コードをLFに変換し、実行権限を付与
RUN dos2unix /wait-for-it.sh && chmod +x /wait-for-it.sh 

# DBの準備が完了するまで待ってから、アプリケーションを起動する (フラグなしの正しい形式)
# Enttrypointやcmdの違いについてはNotion参照
ENTRYPOINT ["/wait-for-it.sh", "db", "3306", "--"]
CMD ["java", "-jar", "app.jar"]